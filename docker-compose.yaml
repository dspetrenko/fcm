version: "3"

services:

  app:
    depends_on:
      - redis
    networks:
      - agbm_net
    build: .
    ports:
      - "8000:80"
    expose:
      - 8000
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  redis:
    image: redis:6-alpine
    expose:
      - 6379
    networks:
      - agbm_net

  worker:
    build: .
    command: ['celery', '--app=src.worker.celery_worker', 'worker', '-l', 'info']
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_WORKER_SEND_TASK_EVENTS=True
      - CELERY_TASK_SEND_SENT_EVENT=True
    depends_on:
      - redis
      - app
    networks:
      - agbm_net
    expose:
      - 6379
      - 5555

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - worker
    networks:
      - agbm_net
    ports:
      - "5555:5555"
    expose:
      - 6379
      - 5555

  prometheus:
    image: prom/prometheus
    depends_on:
      - app
    ports :
      - "9090:9090"
    expose:
      - 9090
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    networks:
      agbm_net:

  celery-exporter:
    image: danihodovic/celery-exporter
    depends_on:
      - prometheus
    environment:
      - CE_BROKER_URL=redis://redis:6379/0
    ports:
      - "9808:9808"
    expose:
      - 9808
      - 6379
    networks:
      agbm_net:

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - "9100:9100"
    expose:
      - 9100
    networks:
      - agbm_net
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    env_file:
      - .env
    ports:
      - "3000:3000"
    expose:
      - 3000
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      agbm_net:

networks:
  agbm_net:
    driver: bridge
